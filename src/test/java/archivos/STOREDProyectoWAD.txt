SELECCIONAMOS TODOS LOS REGISTROS
-------------------------------------------------------------------
--admin

CREATE OR REPLACE FUNCTION seleccionaAdmins() RETURNS Table(
	idAdmin varchar,
	passAdmin varchar
)AS
$$ SELECT * FROM admin;
$$ LANGUAGE sql
select seleccionaAdmins();

--CalificacionesFinales

CREATE OR REPLACE FUNCTION seleccionaCalFinales() RETURNS Table(
	idCalFinal int,
	idEstudiante int,
	idCurso varchar,
	calf int
)AS
$$ SELECT * FROM calificacionesfinales;
$$ LANGUAGE sql
select seleccionaCalFinal();

--CalificacionesParciales

CREATE OR REPLACE FUNCTION seleccionaCalParciales() RETURNS Table(
	llave_califi int,
	descripcion varchar
)AS
$$ SELECT * FROM calificacionesparciales;
$$ LANGUAGE sql
select seleccionaCalParciales();
---------------------------------------------------------------------



SELECCIONAMOS UN REGISTRO
---------------------------------------------------------------------
--admin

CREATE OR REPLACE FUNCTION buscaUnAdmin(in id varchar) RETURNS Table(
	idAdmin varchar,
	passAdmin varchar
)AS
$$ SELECT * FROM admin WHERE idAdmin = id;
$$ LANGUAGE sql
select buscaUnAdmin();

--CalificacionesFinales

CREATE OR REPLACE FUNCTION seleccionaCalFinal(in id int) RETURNS Table(
	idCalFinal int,
	idEstudiante int,
	idCurso varchar,
	calf int
)AS
$$ SELECT * FROM calificacionesfinales WHERE idCalFinal = id;
$$ LANGUAGE sql
select calificacionesfinales();

--CalificacionesParciales


CREATE OR REPLACE FUNCTION seleccionaCalPar(in id int) RETURNS Table(
	llave_califi int,
	descripcion varchar
)AS
$$ SELECT * FROM calificacionesparciales WHERE llave_califi = id;
$$ LANGUAGE sql
select seleccionaCalPar();
---------------------------------------------------------------------


INSERTAMOS UN REGISTRO
---------------------------------------------------------------------
--admin

CREATE OR REPLACE PROCEDURE spInsertaAdmin(
	in id varchar, in passAdmin varchar) language sql as $$
	insert into Admin(idAdmin, passAdmin)VALUES(id, passAdmin);
$$
call spInsertaAdmin();

--CalificacionesFinales

CREATE OR REPLACE PROCEDURE spInsertaCalFinal( 
	in idEstudiante int, in idCurso varchar, in calF int) language sql as $$
	insert into calificacionesFinales(idEstudiante, idCurso, calF) VALUES
	(idEstudiante, idCurso, calF);
$$
call spInsertaCalFinal();

--CalificacionesParciales


CREATE OR REPLACE PROCEDURE spInsertaCalParcial(in desc varchar) language sql as $$
	insert into calificacionesParciales(descripcion) VALUES (desc);
$$
call spInsertaCalParcial();
---------------------------------------------------------------------


ACTUALIZAMOS REGISTRO
---------------------------------------------------------------------
--admin

CREATE OR REPLACE PROCEDURE spActualizarAdmin(
	in idA varchar, in pass varchar) language sql as $$
	update Admin set passAdmin = pass WHERE idAdmin = idA;
$$
call spActualizarAdmin('jm33', 'pruebaActual1');

--CalificacionesFinales

CREATE OR REPLACE PROCEDURE spActualizarCalFinal(in id int, 
	in idEstudiante int, in idCurso varchar, in calF int) language sql as $$
	update calificacionesFinales set idEstudiante = idEstudiante, idCurso = idCurso, calF = calF WHERE idCalFinal = id;
$$
call spActualizarCalFinal();
--CalificacionesParciales


CREATE OR REPLACE PROCEDURE spActualizarCalParcial(in id int, in desc varchar) language sql as $$
	update calificacionesParciales set descripcion=desc WHERE llave_Califi = id;
$$
call spActualizarCalParcial();
---------------------------------------------------------------------


ELIMINAMOS REGISTRO
---------------------------------------------------------------------
--admin

CREATE OR REPLACE PROCEDURE spEliminarAdmin(
	in id varchar)language sql as $$
	delete from Admin Where idAdmin = id;
$$
call spEliminarAdmin();

--CalificacionesFinales

CREATE OR REPLACE PROCEDURE spEliminarCalFinal(in id int) language sql as $$
	delete from calificacionesFinales Where idCalFinal = id;
$$
call spEliminarCalFinal();

--CalificacionesParciales


CREATE OR REPLACE PROCEDURE spEliminarCalParcial(in id int) language sql as $$
	delete from calificacionesParciales where llave_califi = id;
$$
call spEliminarCalParcial();
---------------------------------------------------------------------

SELECCIONAMOS TODOS LOS REGISTROS
-------------------------------------------------------------------
--horarios

CREATE OR REPLACE FUNCTION seleccionaHorarios() RETURNS Table(
	idHorario int,
    	idCurso varchar,
    	idProfesor int,
    	hora varchar,
    	disponible boolean,
    	nombrePlataforma varchar
)AS
$$ SELECT * FROM horarios;
$$ LANGUAGE sql


--DireccionCurso

CREATE OR REPLACE FUNCTION seleccionadirCurso() RETURNS Table(
	iddir int,
    	idcurso varchar,
	idprofesor int,
    	nombreplat varchar,
    	linkllamada varchar,
    	passllamada varchar
)AS
$$ SELECT * FROM direccionCurso;
$$ LANGUAGE sql


--InscripcionCurso

CREATE OR REPLACE FUNCTION seleccionaInscripcionCurso() RETURNS Table(
	idcurso varchar,
    	idestudiante int
)AS
$$ SELECT * FROM inscripcionCurso;
$$ LANGUAGE sql

---------------------------------------------------------------------



SELECCIONAMOS UN REGISTRO
---------------------------------------------------------------------
--admin

CREATE OR REPLACE FUNCTION buscaUnHorario(in id int) RETURNS Table(
	idHorario int,
    	idCurso varchar,
    	idProfesor int,
    	hora varchar,
    	disponible boolean,
    	nombrePlataforma varchar
)AS
$$ SELECT * FROM horarios WHERE idHorario = id;
$$ LANGUAGE sql
select buscaUnAdmin();

--DireccionCurso

CREATE OR REPLACE FUNCTION seleccionaUnDirCurso(in id int) RETURNS Table(
	iddir int,
    	idcurso varchar,
	idprofesor int,
    	nombreplat varchar,
    	linkllamada varchar,
    	passllamada varchar
)AS
$$ SELECT * FROM direccioncurso WHERE iddir = id;
$$ LANGUAGE sql


--InscripcionCurso


CREATE OR REPLACE FUNCTION seleccionaUnaInscripcion(in idc varchar, in ide int) RETURNS Table(
	idcurso varchar,
    	idestudiante int
)AS
$$ SELECT * FROM inscripcionCurso WHERE ide = idestudiante AND idc = idcurso;
$$ LANGUAGE sql

---------------------------------------------------------------------


INSERTAMOS UN REGISTRO
---------------------------------------------------------------------
--Horario

CREATE OR REPLACE PROCEDURE spInsertaHorario(
	in idH int, in idC varchar, in idP int, in Horario varchar, in dis boolean, in nombrePlat varchar) language sql as $$
	insert into Horarios(idHorario, idCurso, idProfesor, hora, disponible, nombrePlataforma)VALUES(idH, idC, idP, Horario, dis, nombrePlat);
$$


--DireccionCurso

CREATE OR REPLACE PROCEDURE spInsertaDirCur( 
	in idd int, in idc varchar, in idp int, in nomplat varchar, in link varchar, in pass varchar) language sql as $$
	insert into direccionCurso(iddir, idcurso, idprofesor, nombreplat, linkllamada, passllamada) VALUES
	(idd, idc, idp, nomplat, link, pass);
$$

--CalificacionesParciales


CREATE OR REPLACE PROCEDURE spInsertaInscripcionCurso(in idc varchar, in ide int) language sql as $$
	insert into InscripcionCurso(idcurso, idestudiante) VALUES (idc, ide);
$$

---------------------------------------------------------------------


ACTUALIZAMOS REGISTRO
---------------------------------------------------------------------
--admin

CREATE OR REPLACE PROCEDURE spActHorario(
	in idH int, in idC varchar, in idP int, in Horario varchar, in dis boolean, in nombrePlat varchar) language sql as $$
	update Horarios set idCurso = idC, idProfesor = IdP, hora = Horario, disponible = dis, nombrePlataforma = nombrePlat WHERE idHorario = idH;
$$


--DireccionCurso

CREATE OR REPLACE PROCEDURE spActDirCur( 
	in idd int, in idc varchar, in idp int, in nomplat varchar, in link varchar, in pass varchar) language sql as $$
	update direccionCurso set idcurso = idc, idprofesor = idp, nombreplat = nomplat, linkllamada = link, passllamada = pass WHERE iddir = idd;
$$


ELIMINAMOS REGISTRO
---------------------------------------------------------------------
--admin

CREATE OR REPLACE PROCEDURE spEliminarHorario(
	in idH int)language sql as $$
	delete from Horarios Where idHorario = id;
$$

--DireccionCurso

CREATE OR REPLACE PROCEDURE spEliminarDirCurso(in id int) language sql as $$
	delete from direccionCurso Where iddir = id;
$$

--CalificacionesParciales

CREATE OR REPLACE PROCEDURE spEliminarInscripcion(in idc varchar, in ide int) language sql as $$
	delete from InscripcionCurso where idEstudiante = ide AND idCurso = idc;
$$
call spEliminarCalParcial();
---------------------------------------------------------------------

==============================================================================================================================

-------Insertar Instructor-----
CREATE OR REPLACE PROCEDURE spInsertarInstructor(
    	in correoI varchar,
    	in passI varchar,
	in nombreI varchar,
	in apPatI varchar,
	in apMatI varchar,
	in calleI varchar,
	in numExtI int,
	in codPostI int,
	in delegacionI varchar,
	in telefonoI varchar
) language sql as $$
insert into Instructor(correo, contraseña, nombre, apPat, apMat, calle, numext, codPost, delegacion, telefono )VALUES(correoI, passI, nombreI, apPatI, apMatI, calleI, numextI, codPostI, delegacionI, telefonoI );
$$
-------------------------------

-------Actualizar Instructor---
CREATE OR REPLACE PROCEDURE spActualizarIntructor(
	in idprofesorI int,
    	in correoI varchar,
    	in passI varchar,
	in nombreI varchar,
	in apPatI varchar,
	in apMatI varchar,
	in calleI varchar,
	in numExtI int,
	in codPostI int,
	in delegacionI varchar,
	in telefonoI varchar
)language sql as $$
update Instructor set correo = correoI, contraseña = passI, nombre = nombreI, apPat = apPatI, apMat = apMatI, calle = calleI, numext = numExtI, codPost = codPostI, delegacion = delegacionI, telefono = telefonoI WHERE idprofesor = idprofesorI;
$$
-------------------------------
-------Eliminar Instructor-----
CREATE OR REPLACE PROCEDURE spEliminarInstructor(
	in idprofe int)language sql as $$
	delete from Instructor where idprofesor = idprofe;
$$

-------------------------------
-------LeerUn Instructor-------
CREATE OR REPLACE FUNCTION LeerInstructor(in idProfe int) RETURNS Table(
	idprofesor int,
    	correo varchar,
    	pass varchar,
	nombre varchar,
	apPat varchar,
	apMat varchar,
	calle varchar,
	numExt int,
	codPost int,
	delegacion varchar,
	telefono varchar
)AS
$$ SELECT * FROM Instructor WHERE idprofesor = idProfe;
$$ LANGUAGE sql
-------------------------------
-------LeerTodos Instructor-----
CREATE OR REPLACE FUNCTION seleccionaTodosIntructor() RETURNS Table(
	idprofesor int,
    	correo varchar,
    	pass varchar,
	nombre varchar,
	apPat varchar,
	apMat varchar,
	calle varchar,
	numExt int,
	codPost int,
	delegacion varchar,
	telefono varchar
)AS
$$ SELECT * FROM Instructor;
$$ LANGUAGE sql

-------------------------------

===============================================================================================================

-------Insertar Estudiante-----
CREATE OR REPLACE PROCEDURE spInsertarEstudiante(
	in nombre varchar, 
	in apPat varchar,
	in apMat varchar,
	in telefono varchar,
	in correo varchar,
	in passwor varchar,
	in fecha date
) language sql as $$
insert into Estudiante(nombre, apPatE, apMatE, telefono, correo, passEstudiante, fechaNacimiento)VALUES( nombre, apPat, apMat, telefono, correo, passwor, fecha);
$$

-------------------------------

-------Actualizar Estudiante---
CREATE OR REPLACE PROCEDURE spActualizarEstudiante(
	in idEstu int, 
	in nombre varchar, 
	in apPat varchar,
	in apMat varchar,
	in telefono varchar,
	in correo varchar,
	in passwor varchar,
	in fecha date
)language sql as $$
update Estudiante set nombre = nombre, appate = apPat, apmate = apMat, telefono = telefono, correo = correo,
passestudiante = passwor, fechanacimiento = fecha WHERE idEstudiante = idEstu;
$$
-------------------------------

-------Eliminar Estudiante-----
CREATE OR REPLACE PROCEDURE spEliminarEstudiante(
	in idEstu int)language sql as $$
	delete from Estudiante where idestudiante = idEstu;
$$
-------------------------------

-------LeerUno Estudiante------
CREATE OR REPLACE FUNCTION LeerEstudiante(in idEstu int) RETURNS Table(
	idEstudiante int, 
	nombre varchar, 
	apPatE varchar,
	apMatE varchar,
	telefono varchar,
	correo varchar,
	passestudiante varchar,
	fechanacimiento date
)AS
$$ SELECT * FROM Estudiante WHERE idestudiante = idEstu;
$$ LANGUAGE sql

-------------------------------

-------LeerTodos Estudiante----
CREATE OR REPLACE FUNCTION seleccionaEstudiantes() RETURNS Table(
	idEstudiante int, 
	nombre varchar, 
	apPatE varchar,
	apMatE varchar,
	telefono varchar,
	correo varchar,
	passestudiante varchar,
	fechanacimiento date
)AS
$$ SELECT * FROM Estudiante;
$$ LANGUAGE sql
-------------------------------

===============================================================================================================

-------Insertar Curso----------

CREATE OR REPLACE PROCEDURE spInsertarCurso (
	in idCurso varchar, in Nombre varchar, in idProfe int, in descri varchar) language sql as $$ insert 	into Curso(idcurso, nombrecurso, idprofesor, descripcion) VALUES (idCurso, Nombre, idProfe, descri);
$$

-------------------------------

-------Actualizar Curso--------

CREATE OR REPLACE PROCEDURE spActualizarCurso(
	in idCur varchar, in Nombre varchar, in idProfe int, in descri varchar) language sql as $$
	update Curso set  nombrecurso = Nombre, idprofesor = idProfe, descripcion = descri WHERE idcurso = idCur;
$$

-------------------------------

-------Eliminar Curso----------

CREATE OR REPLACE PROCEDURE spEliminarCurso(
	in idCur varchar)language sql as $$
	delete from Curso Where idcurso = idCur;
$$

-------------------------------

-------Leer Un Curso-----------
CREATE OR REPLACE FUNCTION seleccionaCurso(in idCur varchar) RETURNS Table(
	idCurso varchar,
    	nombreCurso varchar,
    	idProfesor int,
    	descripcion varchar
)AS
$$ SELECT * FROM Curso WHERE idCurso = idCur;
$$ LANGUAGE sql
select buscaUnAdmin();

-------------------------------

-------Leer Todos Curso--------
CREATE OR REPLACE FUNCTION seleccionaTodosCurso() RETURNS Table(
	idcurso varchar,
    	nombrecurso varchar,
    	descripcion varchar,
	idprofesor int
)AS
$$ SELECT * FROM Curso;
$$ LANGUAGE sql
-------------------------------

-------Leer Todos Curso x Instructor --------
CREATE OR REPLACE FUNCTION seleccionaCursosProfe( in idProfe int ) RETURNS Table(
	idcurso varchar,
    	nombrecurso varchar,
    	descripcion varchar,
	idprofesor int,
)AS
$$ SELECT * FROM Curso WHERE idprofesor = idProfe;
$$ LANGUAGE sql
-------------------------------